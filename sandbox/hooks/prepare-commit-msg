#!c:/python34/python.exe

import sys, os, re, binascii
from subprocess import check_output

# Collect the parameters
commit_msg_filepath = sys.argv[1]
if len(sys.argv) > 2:
  commit_type = sys.argv[2]
else:
  commit_type = ''
if len(sys.argv) > 3:
  commit_hash = sys.argv[3]
else:
  commit_hash = ''
  
print("prepare-commit-msg: \nFile %s\nType: %s\nHash: %s" % (commit_msg_filepath, commit_type, commit_hash))

# Figure out which branch we're on
branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
branch = branch.decode('ascii')
print("prepare-commit-msg: On branch '%s'" % str(branch))

# Populate the commit message with the issue #, if there is one
if str(branch).startswith("issue-"):
  print("prepare-commit-msg: Oh hey, it's an issue branch.")
  result = re.match('issue-(.*)', branch)
  issue_number = result.group(1)
  
  with open(commit_msg_filepath, 'r+') as f:
    content = f.read()
    f.seek(0, 0)
    f.write("ISSUE-%s %s" % (issue_number, content))



#print(repr(sys.argv))
sys.exit(1)